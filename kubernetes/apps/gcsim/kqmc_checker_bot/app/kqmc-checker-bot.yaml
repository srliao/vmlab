---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kqmc-checker-bot
    app.kubernetes.io/instance: kqmc-checker-bot
    app.kubernetes.io/managed-by: vmlab
    app.kubernetes.io/name: kqmc-checker-bot
  name: kqmc-checker-bot
  namespace: gcsim
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: kqmc-checker-bot
      app.kubernetes.io/instance: kqmc-checker-bot
      app.kubernetes.io/managed-by: vmlab
      app.kubernetes.io/name: kqmc-checker-bot
  template:
    metadata:
      labels:
        app: kqmc-checker-bot
        app.kubernetes.io/instance: kqmc-checker-bot
        app.kubernetes.io/managed-by: vmlab
        app.kubernetes.io/name: kqmc-checker-bot
    spec:
      containers:
      - command:
        - python3 /usr/src/app/KQMCCheckerDiscordBot.py
        envFrom:
        - secretRef:
            name: kqmc-checker-bot-secrets
        image: ghcr.io/charlie-zheng/gcsim-kqmc-checker-develop:rolling@sha256:db444fcdd6bb657c0c7731cfbe26004ba881d83da6c65f1b8ff56eb33dfa91ab
        imagePullPolicy: IfNotPresent
        name: kqmc-checker-bot
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 20m
            memory: 512Mi
      restartPolicy: Always
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kqmc-checker-bot
spec:
  dataFrom:
  - extract:
      key: gcsim
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: kqmc-checker-bot-secrets
    template:
      data:
        DISCORD_TOKEN: '{{ .KQMC_CHECKER_BOT_DISCORD_TOKEN }}'
      engineVersion: v2
